# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing


[tox]
envlist = test_package, typechecks, stylechecks, lint
skipsdist = True

[gh-actions]
python =
    3.7: py37, docs
    3.11: py311, lint, manifest
    pypy3: pypy3

[testenv]
install_command = pip install {opts} {packages}

[testenv:test_package]
deps =
	-rrequirements/test_requirements.txt

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	pytest \
	-s \
	-vv \
	{posargs:tests/}

[testenv:train]
envdir = {toxworkdir}/test_package
deps =
	{[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}

commands=
	python credit_scoring_model/train_pipeline.py


[testenv:typechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:mypy credit_scoring_model}


[testenv:stylechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:flake8 credit_scoring_model tests}


[testenv:lint]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands =
	isort credit_scoring_model tests
	black credit_scoring_model tests
	mypy credit_scoring_model
	flake8 credit_scoring_model

[flake8]
exclude = .git,env
max-line-length = 119
